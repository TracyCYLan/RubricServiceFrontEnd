{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\g0170\\\\Downloads\\\\RubricServiceFrontEnd\\\\RubricServiceFrontEnd\\\\src\\\\component\\\\rubric\\\\ListRubricComponent.jsx\";\nimport React, { Component } from 'react';\nimport ApiService from \"../../service/ApiService\";\n\nclass ListRubricComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rubrics: [],\n      message: null\n    };\n    this.deleteRubric = this.deleteRubric.bind(this);\n    this.editRubric = this.editRubric.bind(this);\n    this.addRubric = this.addRubric.bind(this);\n    this.reloadRubricList = this.reloadRubricList.bind(this);\n  }\n\n  componentDidMount() {\n    this.reloadRubricList();\n  }\n\n  reloadRubricList() {\n    ApiService.fetchRubrics().then(res => {\n      this.setState({\n        rubrics: res.data.result\n      });\n    });\n  }\n\n  deleteRubric(rubricId) {\n    ApiService.deleteRubric(rubricId).then(res => {\n      this.setState({\n        message: 'Rubric deleted successfully.'\n      });\n      this.setState({\n        rubrics: this.state.rubrics.filter(r => r.id !== rubricId)\n      });\n    });\n  }\n\n  editRubric(id) {\n    window.localStorage.setItem(\"rubricId\", id);\n    this.props.history.push('/edit-rubric');\n  }\n\n  addRubric() {\n    window.localStorage.removeItem(\"rubricId\");\n    this.props.history.push('/add-rubric');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Rubric Details\"), console.log(this.state.rubrics), React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      style: {\n        width: '100px'\n      },\n      onClick: () => this.addRubric(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" Add Rubric\"), React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Publish Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Operations\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.rubrics.map(rubric => React.createElement(\"tr\", {\n      key: rubric.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, rubric.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, rubric.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, rubric.publishDate), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.deleteRubric(rubric.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" Delete\"), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.editRubric(rubric.id),\n      style: {\n        marginLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Edit\")))))));\n  }\n\n}\n\nexport default ListRubricComponent;","map":{"version":3,"sources":["C:\\Users\\g0170\\Downloads\\RubricServiceFrontEnd\\RubricServiceFrontEnd\\src\\component\\rubric\\ListRubricComponent.jsx"],"names":["React","Component","ApiService","ListRubricComponent","constructor","props","state","rubrics","message","deleteRubric","bind","editRubric","addRubric","reloadRubricList","componentDidMount","fetchRubrics","then","res","setState","data","result","rubricId","filter","r","id","window","localStorage","setItem","history","push","removeItem","render","console","log","width","map","rubric","name","description","publishDate","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ApiService from \"../../service/ApiService\";\nclass ListRubricComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            rubrics: [],\n            message: null\n        }\n        this.deleteRubric = this.deleteRubric.bind(this);\n        this.editRubric = this.editRubric.bind(this);\n        this.addRubric = this.addRubric.bind(this);\n        this.reloadRubricList = this.reloadRubricList.bind(this);\n    }\n\n    componentDidMount() {\n        this.reloadRubricList();\n    }\n\n    reloadRubricList() {\n        ApiService.fetchRubrics()\n            .then((res) => {\n                this.setState({rubrics: res.data.result})\n            });\n    }\n\n    deleteRubric(rubricId) {\n        ApiService.deleteRubric(rubricId)\n           .then(res => {\n               this.setState({message : 'Rubric deleted successfully.'});\n               this.setState({rubrics: this.state.rubrics.filter(r => r.id !== rubricId)});\n           })\n\n    }\n\n    editRubric(id) {\n        window.localStorage.setItem(\"rubricId\", id);\n        this.props.history.push('/edit-rubric');\n    }\n\n    addRubric() {\n        window.localStorage.removeItem(\"rubricId\");\n        this.props.history.push('/add-rubric');\n    }\n\n    render() {\n        return (\n            <div>\n                <h2 className=\"text-center\">Rubric Details</h2>\n                {console.log(this.state.rubrics)}\n                <button className=\"btn btn-danger\" style={{width:'100px'}} onClick={() => this.addRubric()}> Add Rubric</button>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th className=\"hidden\">Id</th>\n                            <th>Name</th>\n                            <th>Description</th>\n                            <th>Publish Date</th>\n                            <th>Operations</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.rubrics.map(\n                        rubric =>\n                                    <tr key={rubric.id}>\n                                        <td>{rubric.name}</td>\n                                        <td>{rubric.description}</td>\n                                        <td>{rubric.publishDate}</td>\n                                        <td>\n                                            <button className=\"btn btn-success\" onClick={() => this.deleteRubric(rubric.id)}> Delete</button>\n                                            <button className=\"btn btn-success\" onClick={() => this.editRubric(rubric.id)} style={{marginLeft: '20px'}}> Edit</button>\n                                        </td>\n                                    </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n\n            </div>\n        );\n    }\n\n}\n\nexport default ListRubricComponent;"]},"metadata":{},"sourceType":"module"}