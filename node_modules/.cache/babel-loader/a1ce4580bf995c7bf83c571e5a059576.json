{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\g0170\\\\Downloads\\\\RubricServiceFrontEnd\\\\RubricServiceFrontEnd\\\\src\\\\component\\\\rubric\\\\ListRubricComponent.jsx\";\nimport React, { Component } from 'react';\nimport ApiService from \"../../service/ApiService\";\nimport axios from \"axios\";\n\nclass ListRubricComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rubrics: [],\n      message: null\n    };\n    this.deleteRubric = this.deleteRubric.bind(this);\n    this.editRubric = this.editRubric.bind(this);\n    this.addRubric = this.addRubric.bind(this);\n    this.reloadRubricList = this.reloadRubricList.bind(this);\n  }\n\n  componentDidMount() {\n    // this.reloadRubricList();\n    axios.get(\"https://localhost:8080/rubric\", {}).then(res => {\n      //on success\n      this.setState({\n        message: res.data\n      });\n    }).catch(error => {\n      //on error\n      alert(\"There is an error in API call.\");\n    });\n  }\n\n  reloadRubricList() {\n    ApiService.fetchRubrics().then(res => {\n      this.setState({\n        rubrics: res.data.result\n      });\n    });\n  }\n\n  deleteRubric(rubricId) {\n    ApiService.deleteRubric(rubricId).then(res => {\n      this.setState({\n        message: 'Rubric deleted successfully.'\n      });\n      this.setState({\n        rubrics: this.state.rubrics.filter(r => r.id !== rubricId)\n      });\n    });\n  }\n\n  editRubric(id) {\n    window.localStorage.setItem(\"rubricId\", id);\n    this.props.history.push('/edit-rubric');\n  }\n\n  addRubric() {\n    window.localStorage.removeItem(\"rubricId\");\n    this.props.history.push('/add-rubric');\n  }\n\n  render() {\n    return this.state.message != null && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.message.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.message.body));\n  } // render() {\n  //     return (\n  //         <div>\n  //             <h2 className=\"text-center\">Rubric Details</h2>\n  //             <button className=\"btn btn-danger\" style={{ width: '100px' }} onClick={() => this.addRubric()}> Add Rubric</button>\n  //             <table className=\"table table-striped\">\n  //                 <thead>\n  //                     <tr>\n  //                         <th className=\"hidden\">Id</th>\n  //                         <th>Name</th>\n  //                         <th>Description</th>\n  //                         <th>Publish Date</th>\n  //                         <th>Operations</th>\n  //                     </tr>\n  //                 </thead>\n  //                 <tbody>\n  //                     {\n  //                         this.state.rubrics.map(\n  //                             rubric =>\n  //                                 <tr key={rubric.id}>\n  //                                     <td>{rubric.name}</td>\n  //                                     <td>{rubric.description}</td>\n  //                                     <td>{rubric.publishDate}</td>\n  //                                     <td>\n  //                                         <button className=\"btn btn-success\" onClick={() => this.deleteRubric(rubric.id)}> Delete</button>\n  //                                         <button className=\"btn btn-success\" onClick={() => this.editRubric(rubric.id)} style={{ marginLeft: '20px' }}> Edit</button>\n  //                                     </td>\n  //                                 </tr>\n  //                         )\n  //                     }\n  //                 </tbody>\n  //             </table>\n  //         </div>\n  //     );\n  // }\n\n\n}\n\nexport default ListRubricComponent;","map":{"version":3,"sources":["C:\\Users\\g0170\\Downloads\\RubricServiceFrontEnd\\RubricServiceFrontEnd\\src\\component\\rubric\\ListRubricComponent.jsx"],"names":["React","Component","ApiService","axios","ListRubricComponent","constructor","props","state","rubrics","message","deleteRubric","bind","editRubric","addRubric","reloadRubricList","componentDidMount","get","then","res","setState","data","catch","error","alert","fetchRubrics","result","rubricId","filter","r","id","window","localStorage","setItem","history","push","removeItem","render","title","body"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ApiService from \"../../service/ApiService\";\nimport axios from \"axios\";\nclass ListRubricComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            rubrics: [],\n            message: null\n        }\n        this.deleteRubric = this.deleteRubric.bind(this);\n        this.editRubric = this.editRubric.bind(this);\n        this.addRubric = this.addRubric.bind(this);\n        this.reloadRubricList = this.reloadRubricList.bind(this);\n    }\n\n    componentDidMount() {\n        // this.reloadRubricList();\n        axios.get(\"https://localhost:8080/rubric\", {}).then((res) => {\n            //on success\n            this.setState({\n                message: res.data\n            });\n        }).catch((error) => {\n            //on error\n            alert(\"There is an error in API call.\");\n        });\n    }\n\n    reloadRubricList() {\n        ApiService.fetchRubrics()\n            .then((res) => {\n                this.setState({ rubrics: res.data.result })\n            });\n    }\n\n    deleteRubric(rubricId) {\n        ApiService.deleteRubric(rubricId)\n            .then(res => {\n                this.setState({ message: 'Rubric deleted successfully.' });\n                this.setState({ rubrics: this.state.rubrics.filter(r => r.id !== rubricId) });\n            })\n\n    }\n\n    editRubric(id) {\n        window.localStorage.setItem(\"rubricId\", id);\n        this.props.history.push('/edit-rubric');\n    }\n\n    addRubric() {\n        window.localStorage.removeItem(\"rubricId\");\n        this.props.history.push('/add-rubric');\n    }\n\n    render(){\n        return(\n        this.state.message!=null &&\n        <div>\n        <h2>{this.state.message.title}</h2>\n        <p>{this.state.message.body}</p>\n        </div>\n        );\n        }\n                \n    // render() {\n    //     return (\n    //         <div>\n    //             <h2 className=\"text-center\">Rubric Details</h2>\n    //             <button className=\"btn btn-danger\" style={{ width: '100px' }} onClick={() => this.addRubric()}> Add Rubric</button>\n    //             <table className=\"table table-striped\">\n    //                 <thead>\n    //                     <tr>\n    //                         <th className=\"hidden\">Id</th>\n    //                         <th>Name</th>\n    //                         <th>Description</th>\n    //                         <th>Publish Date</th>\n    //                         <th>Operations</th>\n    //                     </tr>\n    //                 </thead>\n    //                 <tbody>\n    //                     {\n    //                         this.state.rubrics.map(\n    //                             rubric =>\n    //                                 <tr key={rubric.id}>\n    //                                     <td>{rubric.name}</td>\n    //                                     <td>{rubric.description}</td>\n    //                                     <td>{rubric.publishDate}</td>\n    //                                     <td>\n    //                                         <button className=\"btn btn-success\" onClick={() => this.deleteRubric(rubric.id)}> Delete</button>\n    //                                         <button className=\"btn btn-success\" onClick={() => this.editRubric(rubric.id)} style={{ marginLeft: '20px' }}> Edit</button>\n    //                                     </td>\n    //                                 </tr>\n    //                         )\n    //                     }\n    //                 </tbody>\n    //             </table>\n\n    //         </div>\n    //     );\n    // }\n\n}\n\nexport default ListRubricComponent;"]},"metadata":{},"sourceType":"module"}